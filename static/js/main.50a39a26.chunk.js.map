{"version":3,"sources":["redux/actionType.js","redux/testFn.js","redux/index.js","redux/store.js","components/resultpage/FacebookBtn.js","components/resultpage/KakaoBtn.js","pages/Result.js","components/testpage/Button.js","components/testpage/Question.js","components/testpage/Progress.js","components/testpage/BackBtn.js","pages/Test.js","components/startpage/Button.js","pages/Start.js","pages/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["INCREASE","DECREASE","INITSTATE","INSERT_VALUE_JP","INSERT_VALUE_TF","INSERT_VALUE_EI","INSERT_VALUE","insertValue","value","type","init","page_count","total","r_total","value_J","value_P","value_E","value_I","value_T","value_F","value_array","rootReducer","combineReducers","testFn","state","action","undefined","concat","num","length","test","slice","persistConfig","key","storage","enhancedReducer","persistReducer","FacebookBtn","title","url","encodeURIComponent","window","location","href","title2","onClick","open","KakaoBtn","Kakao","Link","sendDefault","objectType","content","description","imageUrl","link","mobileWebUrl","webUrl","buttons","Result","match","result","useSelector","params","Data","text","Button","onPlus","lastPage","str","OninsertValue","replaceAll","to","className","split","map","QText","i","Question","show_1","useRef","useEffect","current","style","marginTop","opacity","transition","ref","Progress","count","tempStyle","display","width","height","boder","background","BackBtn","onMinus","Test","history","borderRadius","flexWrap","flex_basis","flexBasis","slideRef","wrapRef","dispatch","useDispatch","cnt","push","transform","margin","overflow","data","answer_1","value_1","answer_2","value_2","Start","initState","Loading","Vstate","value_J_P","value_T_F","last_value","setTimeout","store","createStore","persistor","persistStore","configureStore","App","loading","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ymEAAaA,G,OAAW,YACXC,EAAW,WACXC,EAAY,YACZC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAe,kBCGfC,EAAc,SAACC,GAAD,MAAY,CAAEC,KAAMH,EAAcE,MAAOA,IAC9DE,EAAO,CACTC,WAAY,EACZC,MAAO,EACPC,QAAS,GACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,YAAa,ICjBjB,IAEeC,EAFKC,YAAgB,CAAEC,ODoBvB,WAAuC,IAAvBC,EAAsB,uDAAdd,EAAMe,EAAQ,uCACjD,QAAcC,IAAVF,EACA,OAAO,EAEX,OAAQC,EAAOhB,MACX,KAAKH,EACD,GAAoB,KAAhBmB,EAAOjB,MACP,OAAO,2BACAgB,GADP,IAEIV,QAASU,EAAMV,QAAU,EACzBM,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAE9C,GAAoB,KAAhBiB,EAAOjB,MACd,OAAO,2BACAgB,GADP,IAEIT,QAASS,EAAMT,QAAU,EACzBK,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAE9C,GAAoB,KAAhBiB,EAAOjB,MACd,OAAO,2BACAgB,GADP,IAEIR,QAASQ,EAAMR,QAAU,EACzBI,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAE9C,GAAoB,KAAhBiB,EAAOjB,MACd,OAAO,2BACAgB,GADP,IAEIP,QAASO,EAAMP,QAAU,EACzBG,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAE9C,GAAoB,KAAhBiB,EAAOjB,MACd,OAAO,2BACAgB,GADP,IAEIN,QAASM,EAAMN,QAAU,EACzBE,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAE9C,GAAoB,KAAhBiB,EAAOjB,MACd,OAAO,2BACAgB,GADP,IAEIL,QAASK,EAAML,QAAU,EACzBC,YAAaI,EAAMJ,YAAYO,OAAOF,EAAOjB,SAGzD,KAAKL,EACD,MAAoB,KAAhBsB,EAAOjB,MACA,2BACAgB,GADP,IAEIV,QAASU,EAAMV,QAAU,IAGtB,2BACAU,GADP,IAEIT,QAASS,EAAMT,QAAU,IAGrC,KAAKV,EACD,MAAoB,KAAhBoB,EAAOjB,MACA,2BACAgB,GADP,IAEIV,QAASU,EAAMR,QAAU,IAGtB,2BACAQ,GADP,IAEIT,QAASS,EAAMP,QAAU,IAGrC,KAAKb,EACD,MAAoB,KAAhBqB,EAAOjB,MACA,2BACAgB,GADP,IAEIV,QAASU,EAAMN,QAAU,IAGtB,2BACAM,GADP,IAEIT,QAASS,EAAML,QAAU,IAGrC,KAAKnB,EACD,OAAO,2BACAwB,GADP,IAEIb,WAAYa,EAAMb,WAAa,EAC/BC,MAAOY,EAAMZ,MAAQa,EAAOG,IAC5Bf,QAASW,EAAMX,QAAQc,OAAOF,EAAOG,OAE7C,KAAK3B,EACD,IAAMQ,EAAOe,EAAMJ,YAAYI,EAAMJ,YAAYS,OAAS,GACpDC,EAAI,2BACHN,GADG,IAENb,WAAYa,EAAMb,WAAa,EAC/BC,MAAOY,EAAMZ,MAAQY,EAAMX,QAAQW,EAAMX,QAAQgB,OAAS,GAC1DhB,QAASW,EAAMX,QAAQkB,MAAM,EAAGP,EAAMX,QAAQgB,OAAS,GACvDT,YAAaI,EAAMJ,YAAYW,MAAM,EAAGP,EAAMJ,YAAYS,OAAS,KAGvE,OADAC,EAAK,SAAWrB,GAAQe,EAAM,SAAWA,EAAMJ,YAAYI,EAAMJ,YAAYS,OAAS,IAAM,EACrFC,EACX,KAAK5B,EACD,OAAO,2BACAsB,GADP,IAEIb,WAAY,EACZC,MAAO,EACPC,QAAS,GACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,YAAa,KAErB,QACI,OAAOI,M,iBElIbQ,EAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,GAEEC,EAAkBC,YAAeJ,EAAeX,GCTvC,SAASgB,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAC5BC,EAAMC,mBAAmBC,OAAOC,SAASC,MACzCC,EAASJ,mBAAmBF,GAIlC,OACI,qBAAKO,QAJQ,WACbJ,OAAOK,KAAK,wCAA0CP,EAAM,MAAQK,IAGpE,yBCPO,SAASG,EAAT,GAA8B,IAAVT,EAAS,EAATA,MAC3BC,EAAME,OAAOC,SAASC,KA0B5B,OACE,qBAAKE,QA1BU,WACfG,MAAMtC,KAAK,oCACXsC,MAAMC,KAAKC,YAAY,CACrBC,WAAY,OACZC,QAAS,CACPd,MAAOA,EACPe,YAAa,0EACbC,SACE,6FACFC,KAAM,CACJC,aAAcjB,EACdkB,OAAQlB,IAGZmB,QAAS,CACP,CACEpB,MAAO,0DACPiB,KAAM,CACJC,aAAc,+BACdC,OAAQ,qCAOhB,sB,YCxBW,SAASE,EAAT,GAA4B,IAAVC,EAAS,EAATA,MAErBC,GADMC,aAAY,SAAAtC,GAAK,OAAIA,EAAMD,OAAOX,SAC7BgD,EAAMG,OAAjBF,QACR,OACI,gCACI,gCACKG,EAAKH,GAAQvB,MACd,uBACC0B,EAAKH,GAAQI,QAElB,cAAClB,EAAD,CAAUT,MAAO0B,EAAKH,GAAQvB,QAC9B,cAACD,EAAD,CAAaC,MAAO0B,EAAKH,GAAQvB,W,YCb9B,SAAS4B,EAAT,GAA4D,IAAzCD,EAAwC,EAAxCA,KAAME,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SACtCC,GADgE,EAAjBC,cACzCL,EAAKM,WAAW,OAAQ,KAAKA,WAAW,OAAQ,MAC5D,OAAKH,EAYG,cAAC,IAAD,CAAMI,GAAG,WAAT,SACI,wBAAQC,UAAU,SAAS5B,QAASsB,EAApC,SAEAE,EAAIK,MAAM,UAAUC,KAAK,SAACC,EAAMC,GAC5B,OAAQ,iCAAeD,EAAM,yBAAVC,UAd3B,wBAAQJ,UAAU,SAAS5B,QAASsB,EAApC,SAEIE,EAAIK,MAAM,UAAUC,KAAK,SAACC,EAAMC,GAC5B,OAAQ,iCAAeD,EAAM,yBAAVC,QCPxB,SAASC,EAAT,GAA6B,IAATb,EAAQ,EAARA,KACzBc,EAASC,mBAaf,OANAC,qBAAU,WACNF,EAAOG,QAAQC,MAAMC,UAAY,OACjCL,EAAOG,QAAQC,MAAME,QAAU,IAC/BN,EAAOG,QAAQC,MAAMC,UAAY,IACjCL,EAAOG,QAAQC,MAAME,QAAU,OAG/B,mBAAGZ,UAAU,WAAWU,MAZX,CACbC,UAAW,OACXC,QAAS,IACTC,WAAY,iBAS6BC,IAAKR,EAA9C,SACKd,IChBE,SAASuB,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,MAAO7E,EAAS,EAATA,MAEhC8E,EAAY,CACdC,QAAS,eACTC,MAAM,GAAD,OAAK,IAAMhF,GAAS6E,EAAQ,GAA5B,KACLI,OAAQ,OACRC,MAAO,kBACPC,WAAY,SACZT,WAAY,iBAGhB,OACI,8BACI,qBAAKH,MAAOO,MCfT,SAASM,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAE9B,OACI,qBAAKpD,QAASoD,EAAd,mDCQO,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAerBT,EAAY,CACdG,OAAQ,QACRD,MAAO,IAAO5B,EAAKnC,OAAU,KAC7BuE,aAAc,OACdT,QAAS,OACTU,SAAU,UAERC,EAAa,CACfC,UAAW,SAETC,EAAWxB,iBAAO,MAClByB,EAAUzB,iBAAO,MAEjBrE,EAAamD,aAAY,SAAAtC,GAAK,OAAIA,EAAMD,OAAOZ,cAE/C+F,EAAWC,cACXxC,EAAS,SAACyC,EAAKpG,GACjBkG,EVxC0B,CAAEjG,KAAMT,EAAU4B,IUwC1BgF,IAClBF,EAASnG,EAAYC,KAKzByE,qBAAU,WACFtE,GAAc,IACdwF,EAAQU,KAAK,KAEjBL,EAAStB,QAAQC,MAAMG,WAAa,uBACpCkB,EAAStB,QAAQC,MAAM2B,UAAvB,sBAAkD,IAAM9C,EAAKnC,OAASlB,EAAtE,MACA8F,EAAQvB,QAAQC,MAAME,QAAU,MACjC,CAAC1E,IACJ,IAAMsF,EAAU,WACZS,EVtDuB,CAAEjG,KAAMR,KUyDnC,OAEI,sBAAKkF,MAnDS,CACdiB,aAAc,OACdR,MAAO,QACPmB,OAAQ,aACRhB,WAAY,OACZF,OAAQ,QACRT,UAAW,OACXC,QAAS,IACTC,WAAY,iBA2CWC,IAAKkB,EAA5B,UACI,qBAAKtB,MA1CI,CACbS,MAAO,QACPoB,SAAU,UAwCN,SACI,qBAAK7B,MAAOO,EAAWH,IAAKiB,EAA5B,SACKxC,EAAKW,KAAI,SAACsC,EAAMpC,GACb,OAAIA,IAAMb,EAAKnC,OAAS,EAEhB,sBAAKsD,MAAOmB,EAAZ,UACI,8BACI,cAACxB,EAAD,CAAUb,KAAMgD,EAAKnC,aAEzB,gCACI,cAACZ,EAAD,CACID,KAAMgD,EAAKC,SACX/C,OAAQ,WAAQA,EAAO,EAAG8C,EAAKE,UAC/B/C,UAAU,IAEd,cAACF,EAAD,CACID,KAAMgD,EAAKG,SACXjD,OAAQ,WAAQA,EAAO,EAAG8C,EAAKI,UAC/BjD,UAAU,SAbO,EAAES,GAoB/B,sBAAKM,MAAOmB,EAAZ,UACI,8BACI,cAACxB,EAAD,CAAUb,KAAMgD,EAAKnC,aAEzB,gCACI,cAACZ,EAAD,CACID,KAAMgD,EAAKC,SACX/C,OAAQ,WAAQA,EAAO,EAAG8C,EAAKE,UAC/B/C,UAAU,IAEd,cAACF,EAAD,CACID,KAAMgD,EAAKG,SACXjD,OAAQ,WAAQA,EAAO,EAAG8C,EAAKI,UAC/BjD,UAAU,SAbO,EAAES,UAuBnD,gCACI,cAACmB,EAAD,CAASC,QAAS,WAAQA,OACzBtF,EAAa,EAFlB,IAEsBqD,EAAKnC,UAE3B,cAAC2D,EAAD,CAAUC,MAAO9E,EAAYC,MAAOoD,EAAKnC,YClHtC,SAASqC,EAAT,GAA2B,IAATD,EAAQ,EAARA,KAC7B,OACI,iCACI,cAAC,IAAD,CAAMO,GAAG,QAAT,SACKP,MCFF,SAASqD,IACpB,IAAMZ,EAAWC,cACXY,EAAY,WACdb,EZFwB,CAAEjG,KAAMP,KYOpC,OAHA+E,qBAAU,WACNsC,OAGA,6CAEI,cAAC,EAAD,CAAQtD,KAAK,mDCXV,SAASuD,EAAT,GAA6B,IAAXrB,EAAU,EAAVA,QACvBsB,EAAS3D,aAAY,SAAAtC,GAAK,OAAIA,EAAMD,UACpCmG,EAAYD,EAAO3G,QAAQ2G,EAAO1G,QAAS,IAAI,IAC/C4G,EAAYF,EAAOvG,QAAQuG,EAAOtG,QAAS,IAAI,IAE/CyG,GADYH,EAAOzG,QAAQyG,EAAOxG,QAAS,IAAI,KACxB0G,EAAUD,EAMvC,OALAzC,qBAAU,WACN4C,YAAW,WACN1B,EAAQU,KAAK,WAAWe,KAC3B,QAGF,gCACKA,EADL,wB,MXLO,WACX,IAAME,EAAQC,YAAY5F,GAE1B,MAAO,CAAE2F,QAAOE,UADEC,YAAaH,IYANI,GAArBJ,E,EAAAA,MAAOE,E,EAAAA,UA4BAG,MA1Bf,WAOE,OACE,qBAAKhD,MAPW,CAChBiB,aAAc,OACdR,MAAO,QACPmB,OAAQ,aACRlB,OAAQ,SAGR,SACE,cAAC,IAAD,CAAUiC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaM,QAAS,KAAMJ,UAAWA,EAAvC,SACE,cAAC,IAAD,CAAQK,SAAS,eAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjC,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,QAAQC,UAAWtC,IACrC,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,kBAAkBC,UAAW7E,IAC/C,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,WAAWC,UAAWhB,IACxC,cAAC,IAAD,CAAOe,KAAK,IAAIC,UAAWlB,gBCpB1BmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.50a39a26.chunk.js","sourcesContent":["export const INCREASE = 'INCREASE';\r\nexport const DECREASE = 'DECREASE';\r\nexport const INITSTATE = 'INITSTATE';\r\nexport const INSERT_VALUE_JP = 'INSERT_VALUE_JP';\r\nexport const INSERT_VALUE_TF = 'INSERT_VALUE_TF';\r\nexport const INSERT_VALUE_EI = 'INSERT_VALUE_EI';\r\nexport const INSERT_VALUE = 'INSERT_VALUE_EI';\r\n\r\n","import { act } from '@testing-library/react';\r\nimport { INSERT_VALUE, INCREASE, DECREASE, INITSTATE, INSERT_VALUE_EI, INSERT_VALUE_TF, INSERT_VALUE_JP } from './actionType';\r\n\r\nexport const increase = (num) => ({ type: INCREASE, num: num });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const initstate = () => ({ type: INITSTATE });\r\nexport const insertValueJP = (value) => ({ type: INSERT_VALUE_JP, value: value });\r\nexport const insertValueEI = (value) => ({ type: INSERT_VALUE_EI, value: value });\r\nexport const insertValueTF = (value) => ({ type: INSERT_VALUE_TF, value: value });\r\nexport const insertValue = (value) => ({ type: INSERT_VALUE, value: value });\r\nconst init = {\r\n    page_count: 0,\r\n    total: 0,\r\n    r_total: [],\r\n    value_J: 0,\r\n    value_P: 0,\r\n    value_E: 0,\r\n    value_I: 0,\r\n    value_T: 0,\r\n    value_F: 0,\r\n    value_array: []\r\n}\r\n\r\nexport default function testFn(state = init, action) {\r\n    if (state === undefined) {\r\n        return false;\r\n    }\r\n    switch (action.type) {\r\n        case INSERT_VALUE:\r\n            if (action.value == \"J\") {\r\n                return {\r\n                    ...state,\r\n                    value_J: state.value_J + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            } else if (action.value == \"P\") {\r\n                return {\r\n                    ...state,\r\n                    value_P: state.value_P + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            } else if (action.value == \"E\") {\r\n                return {\r\n                    ...state,\r\n                    value_E: state.value_E + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            } else if (action.value == \"I\") {\r\n                return {\r\n                    ...state,\r\n                    value_I: state.value_I + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            } else if (action.value == \"T\") {\r\n                return {\r\n                    ...state,\r\n                    value_T: state.value_T + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            } else if (action.value == \"F\") {\r\n                return {\r\n                    ...state,\r\n                    value_F: state.value_F + 1,\r\n                    value_array: state.value_array.concat(action.value)\r\n                }\r\n            }\r\n        case INSERT_VALUE_JP:\r\n            if (action.value == \"J\") {\r\n                return {\r\n                    ...state,\r\n                    value_J: state.value_J + 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    value_P: state.value_P + 1\r\n                }\r\n            }\r\n        case INSERT_VALUE_EI:\r\n            if (action.value == \"E\") {\r\n                return {\r\n                    ...state,\r\n                    value_J: state.value_E + 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    value_P: state.value_I + 1\r\n                }\r\n            }\r\n        case INSERT_VALUE_TF:\r\n            if (action.value == \"T\") {\r\n                return {\r\n                    ...state,\r\n                    value_J: state.value_T + 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    value_P: state.value_F + 1\r\n                }\r\n            }\r\n        case INCREASE:\r\n            return {\r\n                ...state,\r\n                page_count: state.page_count + 1,\r\n                total: state.total + action.num,\r\n                r_total: state.r_total.concat(action.num)\r\n            }\r\n        case DECREASE:\r\n            const type = state.value_array[state.value_array.length - 1];\r\n            const test = {\r\n                ...state,\r\n                page_count: state.page_count - 1,\r\n                total: state.total - state.r_total[state.r_total.length - 1],\r\n                r_total: state.r_total.slice(0, state.r_total.length - 1),\r\n                value_array: state.value_array.slice(0, state.value_array.length - 1),\r\n            }\r\n            test[\"value_\" + type] = state[\"value_\" + state.value_array[state.value_array.length - 1]] - 1\r\n            return test\r\n        case INITSTATE:\r\n            return {\r\n                ...state,\r\n                page_count: 0,\r\n                total: 0,\r\n                r_total: [],\r\n                value_J: 0,\r\n                value_P: 0,\r\n                value_E: 0,\r\n                value_I: 0,\r\n                value_T: 0,\r\n                value_F: 0,\r\n                value_array: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport testFn from './testFn';\r\n\r\nconst rootReducer = combineReducers({ testFn });\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './index';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default function configureStore() {\r\n    const store = createStore(enhancedReducer);\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n};","export default function FacebookBtn({ title }) {\r\n    const url = encodeURIComponent(window.location.href);\r\n    const title2 = encodeURIComponent(title);\r\n    const sendLink = () => {\r\n        window.open('http://www.facebook.com/sharer.php?u=' + url + '&t=' + title2);\r\n    }\r\n    return (\r\n        <div onClick={sendLink}>\r\n            FacebookBtn\r\n        </div>\r\n    )\r\n} ","export default function KakaoBtn({ title }) {\r\n  const url = window.location.href;\r\n  const sendLink = () => {\r\n    Kakao.init('2ede55ced50813931ca489ee2e7453d7');\r\n    Kakao.Link.sendDefault({\r\n      objectType: 'feed',\r\n      content: {\r\n        title: title,\r\n        description: '나의 친구 유형은? 무엇일까?',\r\n        imageUrl:\r\n          'http://k.kakaocdn.net/dn/Q2iNx/btqgeRgV54P/VLdBs9cvyn8BJXB3o7N8UK/kakaolink40_original.png',\r\n        link: {\r\n          mobileWebUrl: url,\r\n          webUrl: url,\r\n        },\r\n      },\r\n      buttons: [\r\n        {\r\n          title: '심리테스트 하러가기',\r\n          link: {\r\n            mobileWebUrl: 'https://developers.kakao.com',\r\n            webUrl: 'https://developers.kakao.com',\r\n          },\r\n        }\r\n      ]\r\n    })\r\n  }\r\n  return (\r\n    <div onClick={sendLink}>\r\n      KakaoBtn\r\n    </div>\r\n  )\r\n} ","import { useSelector, useDispatch } from 'react-redux';\r\nimport FacebookBtn from '../components/resultpage/FacebookBtn';\r\nimport KakaoBtn from '../components/resultpage/KakaoBtn';\r\nimport Data from '../ResultData/Data.json'\r\nexport default function Result({ match }) {\r\n    const total = useSelector(state => state.testFn.total)\r\n    const { result } = match.params;\r\n    return (\r\n        <div>\r\n            <div>\r\n                {Data[result].title}\r\n                <br />\r\n                {Data[result].text}\r\n            </div>\r\n            <KakaoBtn title={Data[result].title} />\r\n            <FacebookBtn title={Data[result].title} />\r\n        </div>\r\n\r\n    )\r\n    // if (total < 8) {\r\n    //     return (\r\n    //         <div>\r\n    //             {Data[0].Title}\r\n    //             {Data[0].Text}\r\n    //         </div>\r\n    //     );\r\n    // } else if (total < 10) {\r\n    //     return (\r\n    //         <div>\r\n    //             {Data[1].Title}\r\n    //             {Data[1].Text}\r\n    //         </div>\r\n    //     );\r\n    // } else if (total === 10) {\r\n    //     return (\r\n    //         <div>\r\n    //             {Data[4].Title}\r\n    //             {Data[4].Text}\r\n    //         </div>\r\n    //     );\r\n    // } else if (total < 12) {\r\n    //     return (\r\n    //         <div>\r\n    //             {Data[2].Title}\r\n    //             {Data[2].Text}\r\n    //         </div>\r\n    //     );\r\n    // } else if (total <= 13) {\r\n    //     return (\r\n    //         <div>\r\n    //             {Data[3].Title}\r\n    //             {Data[3].Text}\r\n    //         </div>\r\n    //     );\r\n    // } else {\r\n    //     <div>\r\n    //         {Data[3].Title}\r\n    //         {Data[3].Text}\r\n    //     </div>\r\n    // }\r\n\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function Button({  text, onPlus, lastPage,OninsertValue }) {\r\n    const str = text.replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\");\r\n    if (!lastPage) {\r\n        return (\r\n            <button className=\"answer\" onClick={onPlus}>\r\n                {\r\n                str.split('<br />').map( (QText,i) => {\r\n                    return (<span key={i}>{QText}<br/></span>)\r\n                })\r\n                }\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <Link to=\"/Loading\">\r\n                <button className=\"answer\" onClick={onPlus}>\r\n                {\r\n                str.split('<br />').map( (QText,i) => {\r\n                    return (<span key={i}>{QText}<br/></span>)\r\n                })\r\n                }\r\n                </button>\r\n            </Link>\r\n\r\n        )\r\n    }\r\n\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nexport default function Question({ text }) {\r\n    const show_1 = useRef();\r\n\r\n    const divStyle = {\r\n        marginTop: \"10px\",\r\n        opacity: \"0\",\r\n        transition: \"all ease 0.8s\"\r\n    }\r\n    useEffect(() => {\r\n        show_1.current.style.marginTop = \"20px\";\r\n        show_1.current.style.opacity = \"0\";\r\n        show_1.current.style.marginTop = \"0\";\r\n        show_1.current.style.opacity = \"1\";\r\n    })\r\n    return (\r\n        <p className=\"question\" style={divStyle} ref={show_1}>\r\n            {text}\r\n        </p>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\n\r\nexport default function Progress({ count, total }) {\r\n    const wid = (count + 1) * 40;\r\n    const tempStyle = {\r\n        display: \"inline-block\",\r\n        width: `${100 / total * (count + 1)}%`,\r\n        height: \"10px\",\r\n        boder: \"1px solid black\",\r\n        background: \"orange\",\r\n        transition: \"all ease 0.2s\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={tempStyle}>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","export default function BackBtn({ onMinus }) {\r\n\r\n    return (\r\n        <div onClick={onMinus}>\r\n            뒤로가기 버튼\r\n        </div>\r\n    )\r\n}","import { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { increase, decrease, insertValue } from '../redux/testFn';\r\n\r\nimport Data from '../Data/Data.json';\r\nimport Button from '../components/testpage/Button';\r\nimport Question from '../components/testpage/Question';\r\nimport Progress from '../components/testpage/Progress';\r\nimport styled from \"styled-components\";\r\nimport BackBtn from '../components/testpage/BackBtn';\r\n\r\nexport default function Test({ history }) {\r\n    const wrapStyle = {\r\n        borderRadius: \"20px\",\r\n        width: \"450px\",\r\n        margin: \"100px auto\",\r\n        background: \"#eee\",\r\n        height: \"500px\",\r\n        marginTop: \"10px\",\r\n        opacity: \"0\",\r\n        transition: \"all ease 0.8s\"\r\n    }\r\n    const boxStyle = {\r\n        width: \"450px\",\r\n        overflow: \"hidden\",\r\n    }\r\n    const tempStyle = {\r\n        height: \"300px\",\r\n        width: 450 * (Data.length) + \"px\",\r\n        borderRadius: \"20px\",\r\n        display: \"flex\",\r\n        flexWrap: \"nowrap\",\r\n    }\r\n    const flex_basis = {\r\n        flexBasis: \"450px\"\r\n    }\r\n    const slideRef = useRef(null);\r\n    const wrapRef = useRef(null);\r\n\r\n    const page_count = useSelector(state => state.testFn.page_count)\r\n\r\n    const dispatch = useDispatch();\r\n    const onPlus = (cnt, value) => {\r\n        dispatch(increase(cnt));\r\n        dispatch(insertValue(value));\r\n    }\r\n    const OninsertValue = (value) => {\r\n        dispatch(insertValue(value));\r\n    }\r\n    useEffect(() => {\r\n        if (page_count >= 12) {\r\n            history.push(\"/\");\r\n        }\r\n        slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n        slideRef.current.style.transform = `translateX(-${100 / Data.length * page_count}%)`; // 백틱을 사용하여 슬라이드로 이동하는 애니메이션을 만듭니다.\r\n        wrapRef.current.style.opacity = \"1\";\r\n    }, [page_count]);\r\n    const onMinus = () => {\r\n        dispatch(decrease());\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={wrapStyle} ref={wrapRef}>\r\n            <div style={boxStyle}>\r\n                <div style={tempStyle} ref={slideRef}>\r\n                    {Data.map((data, i) => {\r\n                        if (i !== Data.length - 1) {\r\n                            return (\r\n                                <div style={flex_basis} key={1+i}>\r\n                                    <div>\r\n                                        <Question text={data.Question} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button \r\n                                            text={data.answer_1}\r\n                                            onPlus={() => { onPlus(1, data.value_1) }}\r\n                                            lastPage={false}\r\n                                        />\r\n                                        <Button \r\n                                            text={data.answer_2}\r\n                                            onPlus={() => { onPlus(2, data.value_2) }}\r\n                                            lastPage={false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div style={flex_basis} key={2+i}>\r\n                                    <div>\r\n                                        <Question text={data.Question} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            text={data.answer_1}\r\n                                            onPlus={() => { onPlus(1, data.value_1) }}\r\n                                            lastPage={true}\r\n                                        />\r\n                                        <Button \r\n                                            text={data.answer_2}\r\n                                            onPlus={() => { onPlus(2, data.value_2) }}\r\n                                            lastPage={true}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <BackBtn onMinus={() => { onMinus() }} />\r\n                {page_count + 1}/{Data.length}\r\n            </div>\r\n            <Progress count={page_count} total={Data.length} />\r\n        </div>\r\n\r\n\r\n    );\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function Button({ text }) {\r\n    return (\r\n        <button>\r\n            <Link to=\"/Test\">\r\n                {text}\r\n            </Link>\r\n        </button>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { initstate } from '../redux/testFn';\r\nimport Button from '../components/startpage/Button';\r\nexport default function Start() {\r\n    const dispatch = useDispatch();\r\n    const initState = () => {\r\n        dispatch(initstate());\r\n    }\r\n    useEffect(() => {\r\n        initState();\r\n    })\r\n    return (\r\n        <div>\r\n            Start Page\r\n            <Button text=\"테스트 시작하기\" />\r\n        </div>\r\n    );\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initstate } from '../redux/testFn';\r\nimport Button from '../components/startpage/Button';\r\nexport default function Loading({history}) {\r\n    const Vstate = useSelector(state => state.testFn);\r\n    const value_J_P = Vstate.value_J>Vstate.value_P? \"J\":\"P\";\r\n    const value_T_F = Vstate.value_T>Vstate.value_F? \"T\":\"F\";\r\n    const value_E_I = Vstate.value_E>Vstate.value_I? \"E\":\"I\";\r\n    const last_value = value_E_I+value_T_F+value_J_P;\r\n    useEffect(() => {\r\n        setTimeout(()=>{\r\n             history.push(\"/Result/\"+last_value);\r\n        },3000)\r\n    })\r\n    return (\r\n        <div>\r\n            {last_value}\r\n            로딩중\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//디럭스 관련\nimport configureStore from './redux/store';\n\n//페이지 관련\nimport Result from './pages/Result';\nimport Test from './pages/Test';\nimport Start from './pages/Start';\nimport Loading from './pages/Loading'\nconst { store, persistor } = configureStore();\n\nfunction App() {\n  const wrapStyle = {\n    borderRadius: \"20px\",\n    width: \"450px\",\n    margin: \"100px auto\",\n    height: \"500px\"\n  }\n  return (\n    <div style={wrapStyle}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router basename=\"/lastVersion\">\n            <Switch>\n              <Route exact path=\"/\" component={Start} />\n              <Route exact path=\"/Test\" component={Test} />\n              <Route exact path=\"/Result/:result\" component={Result} />\n              <Route exact path=\"/Loading\" component={Loading} />\n              <Route path='*' component={Start} />\n            </Switch>\n          </Router>\n        </PersistGate>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}