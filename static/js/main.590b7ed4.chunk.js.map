{"version":3,"sources":["redux/actionType.js","redux/testFn.js","redux/index.js","redux/store.js","pages/Result.js","components/testpage/Button.js","components/testpage/Question.js","components/testpage/Progress.js","pages/Test.js","components/startpage/Button.js","pages/Start.js","App.js","reportWebVitals.js","index.js"],"names":["INCREASE","DECREASE","INITSTATE","init","page_count","total","r_total","rootReducer","combineReducers","testFn","state","action","undefined","type","num","concat","length","slice","persistConfig","key","storage","enhancedReducer","persistReducer","Result","useSelector","console","log","Data","Title","Text","Button","text","onPlus","lastPage","to","className","onClick","Question","show_1","useRef","useEffect","current","style","marginTop","opacity","transition","ref","Progress","count","tempStyle","display","width","height","boder","background","Test","borderRadius","flexWrap","flex_basis","flexBasis","slideRef","wrapRef","dispatch","useDispatch","cnt","transform","margin","overflow","map","data","i","answer_1","answer_2","Start","initState","store","createStore","persistor","persistStore","configureStore","App","loading","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.590b7ed4.chunk.js","sourcesContent":["export const INCREASE = 'INCREASE';\r\nexport const DECREASE = 'DECREASE';\r\nexport const INITSTATE = 'INITSTATE';\r\n","import { INCREASE, DECREASE, INITSTATE } from './actionType';\r\n\r\nexport const increase = (num) => ({ type: INCREASE, num: num });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const initstate = () => ({ type: INITSTATE });\r\n\r\nconst init = {\r\n    page_count: 0,\r\n    total: 0,\r\n    r_total: []\r\n}\r\n\r\nexport default function testFn(state = init, action) {\r\n    if (state === undefined) {\r\n        return false;\r\n    }\r\n    switch (action.type) {\r\n        case INCREASE:\r\n            return {\r\n                ...state,\r\n                page_count: state.page_count + 1,\r\n                total: state.total + action.num,\r\n                r_total: state.r_total.concat(action.num)\r\n            }\r\n        case DECREASE:\r\n            return {\r\n                ...state,\r\n                page_count: state.page_count - 1,\r\n                total: state.total + state.r_total[state.r_total.length - 1],\r\n                r_total: state.r_total.concat.slice(0, state.r_total.length - 1)\r\n            }\r\n        case INITSTATE:\r\n            return {\r\n                ...state,\r\n                page_count: 0,\r\n                total: 0,\r\n                r_total: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport testFn from './testFn';\r\n\r\nconst rootReducer = combineReducers({ testFn });\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './index';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default function configureStore() {\r\n    const store = createStore(enhancedReducer);\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport Data from '../ResultData/Data.json'\r\nexport default function Result() {\r\n    const total = useSelector(state => state.testFn.total)\r\n    console.log(total)\r\n    if (total < 8) {\r\n        return (\r\n            <div>\r\n                {Data[0].Title}\r\n                {Data[0].Text}\r\n            </div>\r\n        );\r\n    } else if (total < 10) {\r\n        return (\r\n            <div>\r\n                {Data[1].Title}\r\n                {Data[1].Text}\r\n            </div>\r\n        );\r\n    } else if (total === 10) {\r\n        return (\r\n            <div>\r\n                {Data[4].Title}\r\n                {Data[4].Text}\r\n            </div>\r\n        );\r\n    } else if (total < 12) {\r\n        return (\r\n            <div>\r\n                {Data[2].Title}\r\n                {Data[2].Text}\r\n            </div>\r\n        );\r\n    } else if (total <= 13) {\r\n        return (\r\n            <div>\r\n                {Data[3].Title}\r\n                {Data[3].Text}\r\n            </div>\r\n        );\r\n    } else {\r\n        <div>\r\n            {Data[3].Title}\r\n            {Data[3].Text}\r\n        </div>\r\n    }\r\n\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function Button({ text, onPlus, lastPage }) {\r\n\r\n    if (!lastPage) {\r\n        return (\r\n            <button className=\"answer\" onClick={onPlus}>\r\n                {text}\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <Link to=\"/Result\">\r\n                <button className=\"answer\" onClick={onPlus}>\r\n                    {text}\r\n                </button>\r\n            </Link>\r\n\r\n        )\r\n    }\r\n\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nexport default function Question({ text }) {\r\n    const show_1 = useRef();\r\n\r\n    const divStyle = {\r\n        marginTop: \"10px\",\r\n        opacity: \"0\",\r\n        transition: \"all ease 0.8s\"\r\n    }\r\n    useEffect(() => {\r\n        show_1.current.style.marginTop = \"20px\";\r\n        show_1.current.style.opacity = \"0\";\r\n        show_1.current.style.marginTop = \"0\";\r\n        show_1.current.style.opacity = \"1\";\r\n    })\r\n    return (\r\n        <p className=\"question\" style={divStyle} ref={show_1}>\r\n            {text}\r\n        </p>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\n\r\nexport default function Progress({ count, total }) {\r\n    const wid = (count + 1) * 40;\r\n    const tempStyle = {\r\n        display: \"inline-block\",\r\n        width: `${100 / total * (count + 1)}%`,\r\n        height: \"10px\",\r\n        boder: \"1px solid black\",\r\n        background: \"orange\",\r\n        transition: \"all ease 0.2s\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={tempStyle}>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { increase, decrease } from '../redux/testFn';\r\n\r\nimport Data from '../Data/Data.json';\r\nimport Button from '../components/testpage/Button';\r\nimport Question from '../components/testpage/Question';\r\nimport Progress from '../components/testpage/Progress';\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Test() {\r\n    const wrapStyle = {\r\n        borderRadius: \"20px\",\r\n        width: \"450px\",\r\n        margin: \"100px auto\",\r\n        background: \"#eee\",\r\n        height: \"500px\",\r\n        marginTop: \"10px\",\r\n        opacity: \"0\",\r\n        transition: \"all ease 0.8s\"\r\n    }\r\n    const boxStyle = {\r\n        width: \"450px\",\r\n        overflow: \"hidden\",\r\n    }\r\n    const tempStyle = {\r\n        height: \"300px\",\r\n        width: 450 * (Data.length) + \"px\",\r\n        borderRadius: \"20px\",\r\n        display: \"flex\",\r\n        flexWrap: \"nowrap\",\r\n    }\r\n    const flex_basis = {\r\n        flexBasis: \"450px\"\r\n    }\r\n    const slideRef = useRef(null);\r\n    const wrapRef = useRef(null);\r\n\r\n    const page_count = useSelector(state => state.testFn.page_count)\r\n\r\n    const dispatch = useDispatch();\r\n    const onPlus = (cnt) => {\r\n        dispatch(increase(cnt));\r\n    }\r\n    useEffect(() => {\r\n        slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n        slideRef.current.style.transform = `translateX(-${100 / Data.length * page_count}%)`; // 백틱을 사용하여 슬라이드로 이동하는 애니메이션을 만듭니다.\r\n        wrapRef.current.style.opacity = \"1\";\r\n    }, [page_count]);\r\n    const onMinus = () => {\r\n        dispatch(decrease());\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={wrapStyle} ref={wrapRef}>\r\n            <div style={boxStyle}>\r\n                <div style={tempStyle} ref={slideRef}>\r\n                    {Data.map((data, i) => {\r\n                        if (i !== Data.length - 1) {\r\n                            return (\r\n                                <div style={flex_basis} key={i}>\r\n                                    <div>\r\n                                        <Question text={data.Question} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            text={data.answer_1}\r\n                                            onPlus={() => { onPlus(1) }}\r\n                                            lastPage={false}\r\n                                        />\r\n                                        <Button text={data.answer_2}\r\n                                            onPlus={() => { onPlus(2) }}\r\n                                            lastPage={false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div style={flex_basis} key={i}>\r\n                                    <div>\r\n                                        <Question text={data.Question} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            text={data.answer_1}\r\n                                            onPlus={() => { onPlus(1) }}\r\n                                            lastPage={true}\r\n                                        />\r\n                                        <Button text={data.answer_2}\r\n                                            onPlus={() => { onPlus(2) }}\r\n                                            lastPage={true}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n            </div >\r\n            <p>\r\n                {page_count + 1}/6\r\n            </p>\r\n            <Progress count={page_count} total={Data.length} />\r\n        </div>\r\n\r\n\r\n    );\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function Button({ text }) {\r\n    return (\r\n        <button>\r\n            <Link to=\"/Test\">\r\n                {text}\r\n            </Link>\r\n        </button>\r\n    )\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { initstate } from '../redux/testFn';\r\nimport Button from '../components/startpage/Button';\r\nexport default function Start() {\r\n    const dispatch = useDispatch();\r\n    const initState = () => {\r\n        dispatch(initstate());\r\n    }\r\n    useEffect(() => {\r\n        initState();\r\n    })\r\n    return (\r\n        <div>\r\n            Start Page\r\n            <Button text=\"테스트 시작하기\" />\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//디럭스 관련\nimport configureStore from './redux/store';\n\n//페이지 관련\nimport Result from './pages/Result';\nimport Test from './pages/Test';\nimport Start from './pages/Start';\n\nconst { store, persistor } = configureStore();\n\nfunction App() {\n  const wrapStyle = {\n    borderRadius: \"20px\",\n    width: \"450px\",\n    margin: \"100px auto\",\n    height: \"500px\"\n  }\n  return (\n    <div style={wrapStyle}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router basename=\"/lastVersion\">\n            <Switch>\n              <Route exact path=\"/\" component={Start} />\n              <Route exact path=\"/Test\" component={Test} />\n              <Route exact path=\"/Result\" component={Result} />\n              <Route path='*' component={Start} />\n            </Switch>\n          </Router>\n        </PersistGate>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}